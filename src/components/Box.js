import PropTypes from 'prop-types';
import React from 'react';

import { alignments, borderRadii, boxShadow, colors, fontSizes, widths } from '../constants';
import { margin, padding } from '../utils/styleUtils';

const styles = ({
  alignItems,
  backgroundColor,
  borderRadius,
  bottom,
  boxShadow: bs,
  color,
  flexDirection,
  flexBasis,
  flexGrow,
  flexShrink,
  flexWrap,
  fontSize,
  height,
  justifyContent,
  left,
  maxHeight,
  maxWidth,
  minHeight,
  minWidth,
  noOverflow,
  onClick,
  position,
  right,
  textAlign,
  top,
  width,
  ...props
}) => ({
  alignItems: alignments[alignItems],
  backgroundColor: colors[backgroundColor],
  borderRadius: borderRadii[borderRadius],
  bottom,
  boxShadow: bs ? boxShadow : 'none',
  color: colors[color],
  cursor: onClick ? 'pointer' : 'auto',
  display: 'flex',
  flexDirection,
  flexBasis,
  flexGrow,
  flexShrink,
  flexWrap,
  fontSize: fontSizes[fontSize],
  height,
  justifyContent: alignments[justifyContent],
  left,
  ...margin(props),
  maxHeight,
  maxWidth,
  minHeight,
  minWidth,
  overflow: noOverflow ? 'hidden' : 'visible',
  ...padding(props),
  position,
  right,
  textAlign,
  top,
  width: widths[width] || width || widths.auto
});

const Box = ({
  alignItems,
  backgroundColor,
  borderRadius,
  bottom,
  boxShadow,
  children,
  color,
  disabled,
  flexBasis,
  flexDirection,
  flexGrow,
  flexShrink,
  flexWrap,
  fontSize,
  height,
  justifyContent,
  left,
  margin,
  marginBottom,
  marginLeft,
  marginRight,
  marginTop,
  marginX,
  marginY,
  maxHeight,
  maxWidth,
  minHeight,
  minWidth,
  noOverflow,
  padding,
  paddingBottom,
  paddingLeft,
  paddingRight,
  paddingTop,
  paddingX,
  paddingY,
  position,
  right,
  textAlign,
  top,
  width,
  ...props
}) => (
  <div
    className="box"
    style={styles({
      alignItems,
      backgroundColor,
      borderRadius,
      bottom,
      boxShadow,
      color,
      disabled,
      flexBasis,
      flexDirection,
      flexGrow,
      flexShrink,
      flexWrap,
      fontSize,
      height,
      justifyContent,
      left,
      margin,
      marginBottom,
      marginLeft,
      marginRight,
      marginTop,
      marginX,
      marginY,
      maxHeight,
      maxWidth,
      minHeight,
      minWidth,
      noOverflow,
      padding,
      paddingBottom,
      paddingLeft,
      paddingRight,
      paddingTop,
      paddingX,
      paddingY,
      position,
      right,
      textAlign,
      top,
      width
    })}
    {...props}
  >
    {children}
  </div>
);

Box.propTypes = {
  alignItems: PropTypes.string,
  backgroundColor: PropTypes.string,
  borderRadius: PropTypes.string,
  bottom: PropTypes.string,
  boxShadow: PropTypes.bool,
  children: PropTypes.any,
  color: PropTypes.string,
  disabled: PropTypes.bool,
  flexBasis: PropTypes.string,
  flexDirection: PropTypes.any,
  flexGrow: PropTypes.any,
  flexShrink: PropTypes.any,
  flexWrap: PropTypes.any,
  fontSize: PropTypes.string,
  height: PropTypes.string,
  justifyContent: PropTypes.string,
  left: PropTypes.string,
  margin: PropTypes.any,
  marginBottom: PropTypes.any,
  marginLeft: PropTypes.any,
  marginRight: PropTypes.any,
  marginTop: PropTypes.any,
  marginX: PropTypes.any,
  marginY: PropTypes.any,
  maxHeight: PropTypes.string,
  maxWidth: PropTypes.string,
  minHeight: PropTypes.string,
  minWidth: PropTypes.string,
  noOverflow: PropTypes.bool,
  padding: PropTypes.any,
  paddingBottom: PropTypes.any,
  paddingLeft: PropTypes.any,
  paddingRight: PropTypes.any,
  paddingTop: PropTypes.any,
  paddingX: PropTypes.any,
  paddingY: PropTypes.any,
  position: PropTypes.string,
  right: PropTypes.string,
  textAlign: PropTypes.string,
  top: PropTypes.string,
  width: PropTypes.string
};

Box.defaultProps = {
  alignItems: 'flexStart',
  backgroundColor: 'transparent',
  borderRadius: 'none',
  bottom: null,
  boxShadow: false,
  color: 'black',
  flexBasis: 'auto',
  flexDirection: 'row',
  flexGrow: 0,
  flexShrink: 0,
  flexWrap: 0,
  fontSize: 'medium',
  height: 'auto',
  justifyContent: 'flexStart',
  left: null,
  maxHeight: 'auto',
  maxWidth: 'auto',
  minHeight: 'auto',
  minWidth: 'auto',
  padding: null,
  position: 'relative',
  right: null,
  textAlign: 'left',
  top: null,
  width: 'auto'
};

export default Box;
